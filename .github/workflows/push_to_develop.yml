# In steps following image build we're ignoring files uploaded to /_w/ directory as current code is in /app directory

name: Push to develop
on:
  push:
    branches:
      - develop

concurrency:
  group: "${{ github.ref }}-images"
  cancel-in-progress: true

env:
  FOUNDRY_PROFILE: ci

jobs:
  format:
    name: Check formatting
    runs-on: general
    container:
      image: ${{ vars.GCP_DOCKER_IMAGE_REGISTRY }}/node-extended:3e595e3d
      credentials:
        username: _json_key_base64
        password: ${{ secrets.GCP_DOCKER_IMAGES_REGISTRY_SERVICE_ACCOUNT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init env
        run: yarn install

      - name: Check formatting
        run: yarn format:check

  lint:
    name: Run linter
    runs-on: general
    container:
      image: ${{ vars.GCP_DOCKER_IMAGE_REGISTRY }}/node-extended:3e595e3d
      credentials:
        username: _json_key_base64
        password: ${{ secrets.GCP_DOCKER_IMAGES_REGISTRY_SERVICE_ACCOUNT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init env
        run: yarn install

      - name: Linter
        run: yarn lint

  lint-commits:
    name: Lint commits
    runs-on: general
    container:
      image: ${{ vars.GCP_DOCKER_IMAGE_REGISTRY }}/node-extended:3e595e3d
      credentials:
        username: _json_key_base64
        password: ${{ secrets.GCP_DOCKER_IMAGES_REGISTRY_SERVICE_ACCOUNT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init env
        run: yarn install

      - name: Lint commits
        run: yarn lint:commits

  analyze:
    name: Analyze with Slither
    runs-on: general
    continue-on-error: true
    container:
      image: ${{ vars.GCP_DOCKER_IMAGE_REGISTRY }}/node-extended:3e595e3d
      credentials:
        username: _json_key_base64
        password: ${{ secrets.GCP_DOCKER_IMAGES_REGISTRY_SERVICE_ACCOUNT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Init env
        run: yarn install

      - name: Run Slither
        shell: "bash {0}"
        run: |
          yarn slither:ci
          exit_code=$?
          echo '```' > $GITHUB_STEP_SUMMARY
          cat reports/slither.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          exit $exit_code

  build-image:
    name: Build Docker Image
    needs:
      - format
      - lint
      - lint-commits
    runs-on:
      - general
    steps:
      - uses: actions/checkout@v4
        with:
          # use some obscure path to checkout the code with service account perms
          # this is possible as $GITHUB_WORKSPACE is owned by the same service
          # account
          # see: https://github.com/actions/checkout/issues/211
          path: __local

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: europe-docker.pkg.dev
          username: _json_key_base64
          password: ${{ secrets.GCP_DOCKER_IMAGES_REGISTRY_SERVICE_ACCOUNT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.GCP_DOCKER_IMAGE_REGISTRY }}/core
          tags: |
            type=ref,event=branch
            type=sha,prefix=,format=long

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: __local
          file: __local/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ vars.GCP_DOCKER_IMAGE_REGISTRY }}/core:buildcache
          cache-to: type=registry,ref=${{ vars.GCP_DOCKER_IMAGE_REGISTRY }}/core:buildcache,mode=max


  # Technically we don't need to build step is done during the docker build
  build:
    name: Build
    needs: build-image
    runs-on: general
    container:
      image: ${{ vars.GCP_DOCKER_IMAGE_REGISTRY }}/core:${{ github.sha }}
      credentials:
        username: _json_key_base64
        password: ${{ secrets.GCP_DOCKER_IMAGES_REGISTRY_SERVICE_ACCOUNT }}

    steps:
      - name: Build
        run: "cd /app; yarn build"

  test:
    name: Test suite
    needs: build-image
    runs-on: general
    container:
      image: ${{ vars.GCP_DOCKER_IMAGE_REGISTRY }}/core:${{ github.sha }}
      credentials:
        username: _json_key_base64
        password: ${{ secrets.GCP_DOCKER_IMAGES_REGISTRY_SERVICE_ACCOUNT }}
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
      - name: Run tests
        env:
          TEST_RPC_URL: "${{ vars.TENDERLY_MAINNET_RPC_URL }}"
          TEST_SAFE_SINGLETON: "0x41675C099F32341bf84BFc5382aF534df5C7461a"
          TEST_SAFE_PROXY_FACTORY: "0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67"
          TEST_RPC_URL_POLYGON: "https://polygon-rpc.com"
          TEST_SAFE_SINGLETON_POLYGON: "0x41675C099F32341bf84BFc5382aF534df5C7461a"
          TEST_SAFE_PROXY_FACTORY_POLYGON: "0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67"
        run: "cd /app; yarn test:ci"

      - name: Upload test artifact
        uses: actions/upload-artifact@v4  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: test-results
          path: /app/reports/junit.xml

      - name: Prepare test report
        uses: dorny/test-reporter@v1
        if: success() || failure()        # run this step even if previous step failed
        with:
          artifact: test-results            # artifact name
          name: Tests results                # Name of the check run which will be created
          path: '*.xml'                     # Path to test results (inside artifact .zip)
          reporter: java-junit              # Format of test results

  deploy-contract:
    name: Deploy contracts
    needs:
      - build
      - test
    runs-on: general
    container:
      image: ${{ vars.GCP_DOCKER_IMAGE_REGISTRY }}/core:${{ github.sha }}
      credentials:
        username: _json_key_base64
        password: ${{ secrets.GCP_DOCKER_IMAGES_REGISTRY_SERVICE_ACCOUNT }}

    steps:
      - name: Deploy contracts
        env:
          PRIVATE_KEY: "${{ secrets.TESTNET_DEPLOYER_PRIVATE_KEY }}"
          ETHERSCAN_API_KEY: "${{ secrets.TENDERLY_API_KEY }}"
          RPC_URL: "${{ vars.TENDERLY_MAINNET_RPC_URL }}"
          VERIFIER_URL: "${{ vars.TENDERLY_MAINNET_RPC_URL }}/verify/etherscan"
          MAX_OPEX_SPLIT: "5"
          MIN_METAPOOL_SPLIT: "0"
          CONTRACT_ADDRESSES: "/app/ci/contract_addresses.txt"
        run: |
          cd /app
          touch .env
          yarn deploy:tenderly && (
            cp $CONTRACT_ADDRESSES $GITHUB_OUTPUT
            echo "# Smart contract addresses\n\n| Contract name | Address |\n|---|---|" > $GITHUB_STEP_SUMMARY
            grep ADDRESS $CONTRACT_ADDRESSES | awk -F '=' '{gsub("_ADDRESS", "", $1); print "| `" $1 "` | `" $2 "` |"}' >> $GITHUB_STEP_SUMMARY
            echo "\n# Other variables\n\n| Variable | Value |\n|---|---|" >> $GITHUB_STEP_SUMMARY
            grep -v ADDRESS $CONTRACT_ADDRESSES | awk -F '=' '{print "| `" $1 "` | `" $2 "` |"}' >> $GITHUB_STEP_SUMMARY
          )

      - name: Upload contract addresses artifact
        uses: actions/upload-artifact@v4  # upload test results
        with:
          name: contract_addresses.txt
          path: /app/ci/contract_addresses.txt

  publish:
    name: Publish
    needs:
      - deploy-contract
    runs-on: general
    container:
      image: ${{ vars.GCP_DOCKER_IMAGE_REGISTRY }}/node-extended:3e595e3d
      credentials:
        username: _json_key_base64
        password: ${{ secrets.GCP_DOCKER_IMAGES_REGISTRY_SERVICE_ACCOUNT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Init env
        run: yarn install

      - name: Build
        run: yarn build:contracts

      - name: Set npm auth token
        run: |
          yarn config set npmScopes.golemfoundation.npmAuthToken "${{ secrets.HOUSEKEEPER_PAT_OCTANT_V2_PACKAGES }}"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --local user.email "birnam@wildland.io"
          git config --local user.name "Housekeeper Bot"
          git config --local user.signingkey "${HOUSEKEEPER_GITHUB_SIGNING_KEY_ID}"

      - name: Publish
        run: yarn release --preRelease --ci
