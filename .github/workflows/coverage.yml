name: Coverage

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  FOUNDRY_PROFILE: coverage

jobs:
  coverage:
    strategy:
      fail-fast: true

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.TOKEN_GITHUB }}
      - name: Install foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x.x
      - name: Run npm install
        run: "npm i"
      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build
      - name: Run forge coverage
        id: coverage
        env:
          TEST_RPC_URL: "https://eth.llamarpc.com"
          TEST_SAFE_SINGLETON: "0x41675C099F32341bf84BFc5382aF534df5C7461a"
          TEST_SAFE_PROXY_FACTORY: "0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67"
        run: |
          {
          echo 'COVERAGE<<EOF'
          forge coverage --summary | awk '/Test Summary:/{y=1;next}y'
          echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Comment on PR
        id: comment
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.TOKEN_GITHUB }}
          script: |
            const output = `${{ steps.coverage.outputs.COVERAGE }}`;
            const commentBody = `Forge code coverage:\n${output}\n`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
