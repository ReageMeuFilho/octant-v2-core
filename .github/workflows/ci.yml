name: CI Pipeline
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - develop

env:
  FOUNDRY_PROFILE: ci

jobs:
  format:
    name: Check formatting
    runs-on: general

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: Install dependencies
        run: "corepack enable && yarn install"

      - name: Check formatting
        run: "yarn format:check"

  lint:
    name: Check with linter
    runs-on: general

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: Install dependencies
        run: "corepack enable && yarn install"

      - name: Linter
        run: "yarn lint"

  build:
    name: Build
    runs-on: general

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: Install Foundry
        uses: onbjerg/foundry-toolchain@v1

      - name: Install dependencies
        run: "corepack enable && yarn install"

      - name: Build
        run: "yarn build"

  test:
    name: Test suite
    runs-on: general
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: Install Foundry
        uses: onbjerg/foundry-toolchain@v1

      - name: Install dependencies
        run: "corepack enable && yarn install"

      - name: Run tests
        env:
          TEST_RPC_URL: "${{ secrets.TEST_RPC_URL }}"
          TEST_SAFE_SINGLETON: "0x41675C099F32341bf84BFc5382aF534df5C7461a"
          TEST_SAFE_PROXY_FACTORY: "0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67"
          TEST_RPC_URL_POLYGON: "https://polygon-rpc.com"
          TEST_SAFE_SINGLETON_POLYGON: "0x41675C099F32341bf84BFc5382aF534df5C7461a"
          TEST_SAFE_PROXY_FACTORY_POLYGON: "0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67"
        run: "yarn test -v"

#  # Coverage fails on 'Yul exception:Variable expr is 1 too deep in the stack'
#  coverage:
#    runs-on: general
#    permissions:
#      contents: read
#      pull-requests: write
#
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: recursive
#
#      - name: Setup node
#        uses: actions/setup-node@v4
#        with:
#          node-version-file: 'package.json'
#
#      - name: Install Foundry
#        uses: onbjerg/foundry-toolchain@v1
#
#      - name: Install dependencies
#        run: "corepack enable && yarn install"
#
#      - name: Run Forge build
#        run: "forge --version && yarn build --sizes"
#
#      - name: Run forge coverage
#        id: coverage
#        env:
#          TEST_RPC_URL: "https://eth.llamarpc.com"
#          TEST_SAFE_SINGLETON: "0x41675C099F32341bf84BFc5382aF534df5C7461a"
#          TEST_SAFE_PROXY_FACTORY: "0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67"
#        run: |
#          {
#          echo 'COVERAGE<<EOF'
#          forge coverage --ir-minimum --summary | awk '/Test Summary:/{y=1;next}y'
#          echo EOF
#          } >> "$GITHUB_OUTPUT"
#
#      - name: Comment on PR
#        id: comment
#        uses: actions/github-script@v7
#        with:
#          github-token: ${{ secrets.TOKEN_GITHUB }}
#          script: |
#            const output = `${{ steps.coverage.outputs.COVERAGE }}`;
#            const commentBody = `Forge code coverage:\n${output}\n`;
#            github.rest.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: commentBody
#            });

#  # Blocked by OSU-502
#  analyze:
#    name: Analyze with Slither
#    runs-on: general
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: recursive
#
#      - name: Setup node
#        uses: actions/setup-node@v4
#        with:
#          node-version-file: 'package.json'
#
#      - name: Install Foundry
#        uses: onbjerg/foundry-toolchain@v1
#
#      - name: Install dependencies
#        run: "corepack enable && yarn install"
#
#      - name: Run Slither
#        run: "yarn slither:setup && yarn slither"
